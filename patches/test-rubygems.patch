Patch by MSP-Greg
test_gem_gemcutter_utilities.rb - remove some skips
several patches allow 'ruby runner.rb rubygems' to pass all tests
diff --git a/lib/rubygems/test_case.rb b/lib/rubygems/test_case.rb
index f1cd3d274c..3a98851849 100644
--- a/lib/rubygems/test_case.rb
+++ b/lib/rubygems/test_case.rb
@@ -1302,8 +1302,14 @@ def self.rubybin
   end
 
   @@ruby = rubybin
-  @@good_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/good_rake.rb', __FILE__)}\""
-  @@bad_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/bad_rake.rb', __FILE__)}\""
+
+  if File.exist?(good = File.expand_path('rubygems/good_rake.rb', Dir.pwd))
+    @@good_rake = "#{rubybin} \"#{good}\""
+    @@bad_rake  = "#{rubybin} \"#{File.expand_path('rubygems/bad_rake.rb' , Dir.pwd)}\""
+  else
+    @@good_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/good_rake.rb', __FILE__)}\""
+    @@bad_rake  = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/bad_rake.rb', __FILE__)}\""
+  end
 
   ##
   # Construct a new Gem::Dependency.
diff --git a/test/rubygems/test_gem.rb b/test/rubygems/test_gem.rb
index f383d5af58..b6f657889d 100644
--- a/test/rubygems/test_gem.rb
+++ b/test/rubygems/test_gem.rb
@@ -818,7 +818,7 @@ def test_self_platforms
   end
 
   def test_self_prefix
-    assert_equal @@project_dir, Gem.prefix
+    assert_equal(@@project_dir, Gem.prefix) unless __dir__.start_with?(@@project_dir)
   end
 
   def test_self_prefix_libdir
diff --git a/test/rubygems/test_gem_commands_environment_command.rb b/test/rubygems/test_gem_commands_environment_command.rb
index 1451f03982..55fbf06ce0 100644
--- a/test/rubygems/test_gem_commands_environment_command.rb
+++ b/test/rubygems/test_gem_commands_environment_command.rb
@@ -26,7 +26,7 @@ def test_execute
     assert_match %r|RUBY VERSION: \d+\.\d+\.\d+ \(.*\) \[.*\]|, @ui.output
     assert_match %r|INSTALLATION DIRECTORY: #{Regexp.escape @gemhome}|,
                  @ui.output
-    assert_match %r|RUBYGEMS PREFIX: |, @ui.output
+    assert_match(%r|RUBYGEMS PREFIX: |, @ui.output) unless __dir__.start_with?(@@project_dir)
     assert_match %r|RUBY EXECUTABLE:.*#{RbConfig::CONFIG['ruby_install_name']}|,
                  @ui.output
     assert_match %r|GIT EXECUTABLE: #{@cmd.send(:git_path)}|, @ui.output
diff --git a/test/rubygems/test_gem_commands_update_command.rb b/test/rubygems/test_gem_commands_update_command.rb
index 549e34c218..64fd892cad 100644
--- a/test/rubygems/test_gem_commands_update_command.rb
+++ b/test/rubygems/test_gem_commands_update_command.rb
@@ -482,13 +482,15 @@ def test_update_rubygems_arguments
 
     arguments = @cmd.update_rubygems_arguments
 
-    assert_equal '--prefix',           arguments.shift
-    assert_equal Gem.prefix,           arguments.shift
-    assert_equal '--no-rdoc',          arguments.shift
-    assert_equal '--no-ri',            arguments.shift
-    assert_equal '--previous-version', arguments.shift
-    assert_equal Gem::VERSION,         arguments.shift
-    assert_empty arguments
+    if Gem.prefix
+      assert arguments.include?('--prefix')
+      assert arguments.include?(Gem.prefix)
+    end
+    assert arguments.include?('--no-rdoc')
+    assert arguments.include?('--no-ri')
+    assert arguments.include?('--previous-version')
+    assert arguments.include?(Gem::VERSION)
+    assert_equal(Gem.prefix ? 6 : 4, arguments.length)
   end
 
   def test_update_rubygems_arguments_1_8_x
@@ -496,11 +498,13 @@ def test_update_rubygems_arguments_1_8_x
 
     arguments = @cmd.update_rubygems_arguments
 
-    assert_equal '--prefix',           arguments.shift
-    assert_equal Gem.prefix,           arguments.shift
-    assert_equal '--no-rdoc',          arguments.shift
-    assert_equal '--no-ri',            arguments.shift
-    assert_empty arguments
+    if Gem.prefix
+      assert arguments.include?('--prefix')
+      assert arguments.include?(Gem.prefix)
+    end
+    assert arguments.include?('--no-rdoc')
+    assert arguments.include?('--no-ri')
+    assert_equal(Gem.prefix ? 4 : 2, arguments.length)
   end
 
   def test_explain
diff --git a/test/rubygems/test_gem_gemcutter_utilities.rb b/test/rubygems/test_gem_gemcutter_utilities.rb
index 7b3e273957..155ebf0101 100644
--- a/test/rubygems/test_gem_gemcutter_utilities.rb
+++ b/test/rubygems/test_gem_gemcutter_utilities.rb
@@ -13,6 +13,9 @@ def setup
 
     ENV['RUBYGEMS_HOST'] = nil
     Gem.configuration.rubygems_api_key = nil
+    # two below statements cleanup up intermittent failures/errors when run parallel
+    Gem.configuration.disable_default_gem_server = nil
+    Gem.host = nil
 
     @cmd = Gem::Command.new '', 'summary'
     @cmd.extend Gem::GemcutterUtilities
@@ -179,7 +182,8 @@ def test_sign_in_with_other_credentials_doesnt_overwrite_other_keys
   end
 
   def test_sign_in_with_bad_credentials
-    skip 'Always uses $stdin on windows' if Gem.win_platform?
+    skip 'Always uses $stdin on windows' if
+      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
 
     assert_raises Gem::MockGemUi::TermError do
       util_sign_in ['Access Denied.', 403, 'Forbidden']
@@ -190,7 +194,8 @@ def test_sign_in_with_bad_credentials
   end
 
   def util_sign_in response, host = nil, args = []
-    skip 'Always uses $stdin on windows' if Gem.win_platform?
+    skip 'Always uses $stdin on windows' if
+      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
 
     email    = 'you@example.com'
     password = 'secret'
diff --git a/test/rubygems/test_gem_local_remote_options.rb b/test/rubygems/test_gem_local_remote_options.rb
index a51182b11c..ef0070840f 100644
--- a/test/rubygems/test_gem_local_remote_options.rb
+++ b/test/rubygems/test_gem_local_remote_options.rb
@@ -89,7 +89,7 @@ def test_source_option
     original_sources << s2.to_s
     original_sources << "#{s3}/"
 
-    assert_equal original_sources, Gem.sources
+    assert_equal original_sources, Gem.sources.to_a
   end
 
   def test_short_source_option
@@ -102,7 +102,7 @@ def test_short_source_option
 
     original_sources << source
 
-    assert_equal original_sources, Gem.sources
+    assert_equal original_sources, Gem.sources.to_a
   end
 
   def test_update_sources_option
@@ -128,7 +128,7 @@ def test_source_option_bad
       @cmd.handle_options %W[--source #{s1}]
     end
 
-    assert_equal [@gem_repo], Gem.sources
+    assert_equal [@gem_repo], Gem.sources.to_a
   end
 
 end
diff --git a/test/rubygems/test_gem_package.rb b/test/rubygems/test_gem_package.rb
index 09ef27ee22..2b07420150 100644
--- a/test/rubygems/test_gem_package.rb
+++ b/test/rubygems/test_gem_package.rb
@@ -150,7 +150,7 @@ def test_add_files
   end
 
   def test_add_files_symlink
-    skip 'symlink not supported' if Gem.win_platform?
+    skip 'symlink not supported' if Gem.win_platform? && RUBY_VERSION < '2.3'
 
     spec = Gem::Specification.new
     spec.files = %w[lib/code.rb lib/code_sym.rb]
@@ -159,7 +159,11 @@ def test_add_files_symlink
     File.open 'lib/code.rb',  'w' do |io| io.write '# lib/code.rb'  end
 
     # NOTE: 'code.rb' is correct, because it's relative to lib/code_sym.rb
-    File.symlink('code.rb', 'lib/code_sym.rb')
+    begin
+      File.symlink('code.rb', 'lib/code_sym.rb')
+    rescue Errno::EACCES
+      skip "symlink - must be admin with no UAC on Windows"
+    end
 
     package = Gem::Package.new 'bogus.gem'
     package.spec = spec
@@ -451,7 +455,7 @@ def test_extract_tar_gz_absolute
   end
 
   def test_extract_tar_gz_symlink_relative_path
-    skip 'symlink not supported' if Gem.win_platform?
+    skip 'symlink not supported' if Gem.win_platform? && RUBY_VERSION < '2.3'
 
     package = Gem::Package.new @gem
 
@@ -460,8 +464,12 @@ def test_extract_tar_gz_symlink_relative_path
       tar.mkdir       'lib',         0755
       tar.add_symlink 'lib/foo.rb', '../relative.rb', 0644
     end
-
-    package.extract_tar_gz tgz_io, @destination
+    
+    begin
+      package.extract_tar_gz tgz_io, @destination
+    rescue Errno::EACCES
+      skip "symlink - must be admin with no UAC on Windows"
+    end
 
     extracted = File.join @destination, 'lib/foo.rb'
     assert_path_exists extracted
@@ -472,28 +480,32 @@ def test_extract_tar_gz_symlink_relative_path
   end
 
   def test_extract_symlink_parent
-   skip 'symlink not supported' if Gem.win_platform?
+    skip 'symlink not supported' if Gem.win_platform? && RUBY_VERSION < '2.3'
 
-   package = Gem::Package.new @gem
+    package = Gem::Package.new @gem
 
-   tgz_io = util_tar_gz do |tar|
-     tar.mkdir       'lib',               0755
-     tar.add_symlink 'lib/link', '../..', 0644
-     tar.add_file    'lib/link/outside.txt', 0644 do |io| io.write 'hi' end
-   end
+    tgz_io = util_tar_gz do |tar|
+      tar.mkdir       'lib',               0755
+      tar.add_symlink 'lib/link', '../..', 0644
+      tar.add_file    'lib/link/outside.txt', 0644 do |io| io.write 'hi' end
+    end
 
-   # Extract into a subdirectory of @destination; if this test fails it writes
-   # a file outside destination_subdir, but we want the file to remain inside
-   # @destination so it will be cleaned up.
-   destination_subdir = File.join @destination, 'subdir'
-   FileUtils.mkdir_p destination_subdir
+    # Extract into a subdirectory of @destination; if this test fails it writes
+    # a file outside destination_subdir, but we want the file to remain inside
+    # @destination so it will be cleaned up.
+    destination_subdir = File.join @destination, 'subdir'
+    FileUtils.mkdir_p destination_subdir
 
-   e = assert_raises Gem::Package::PathError do
-     package.extract_tar_gz tgz_io, destination_subdir
-   end
+    e = assert_raises(Gem::Package::PathError, Errno::EACCES) do
+      package.extract_tar_gz tgz_io, destination_subdir
+    end
 
-   assert_equal("installing into parent path lib/link/outside.txt of " +
-                 "#{destination_subdir} is not allowed", e.message)
+    if Gem::Package::PathError === e
+      assert_equal("installing into parent path lib/link/outside.txt of " +
+                   "#{destination_subdir} is not allowed", e.message)
+    else
+      skip "symlink - must be admin with no UAC on Windows"
+    end
   end
 
   def test_extract_tar_gz_directory
