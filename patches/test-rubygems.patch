Patch by MSP-Greg
test_gem_gemcutter_utilities.rb - remove some skips
several patches allow 'ruby runner.rb rubygems' to pass all tests
diff --git a/lib/rubygems/test_case.rb b/lib/rubygems/test_case.rb
index 82afb8a068..16804c62ca 100644
--- a/lib/rubygems/test_case.rb
+++ b/lib/rubygems/test_case.rb
@@ -1278,8 +1278,14 @@ def self.rubybin
   end
 
   @@ruby = rubybin
-  @@good_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/good_rake.rb', __FILE__)}\""
-  @@bad_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/bad_rake.rb', __FILE__)}\""
+
+  if File.exist?(good = File.expand_path('rubygems/good_rake.rb', Dir.pwd))
+    @@good_rake = "#{rubybin} \"#{good}\""
+    @@bad_rake  = "#{rubybin} \"#{File.expand_path('rubygems/bad_rake.rb' , Dir.pwd)}\""
+  else
+    @@good_rake = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/good_rake.rb', __FILE__)}\""
+    @@bad_rake  = "#{rubybin} \"#{File.expand_path('../../../test/rubygems/bad_rake.rb', __FILE__)}\""
+  end
 
   ##
   # Construct a new Gem::Dependency.
diff --git a/test/rubygems/test_gem.rb b/test/rubygems/test_gem.rb
index 3225a05c6b..f007500cb6 100644
--- a/test/rubygems/test_gem.rb
+++ b/test/rubygems/test_gem.rb
@@ -753,7 +753,7 @@ def test_self_platforms
   end
 
   def test_self_prefix
-    assert_equal @@project_dir, Gem.prefix
+    assert_equal(@@project_dir, Gem.prefix) unless __dir__.start_with?(@@project_dir)
   end
 
   def test_self_prefix_libdir
diff --git a/test/rubygems/test_gem_commands_environment_command.rb b/test/rubygems/test_gem_commands_environment_command.rb
index 040e5c4c39..e473529d62 100644
--- a/test/rubygems/test_gem_commands_environment_command.rb
+++ b/test/rubygems/test_gem_commands_environment_command.rb
@@ -26,7 +26,7 @@ def test_execute
     assert_match %r|RUBY VERSION: \d+\.\d+\.\d+ \(.*\) \[.*\]|, @ui.output
     assert_match %r|INSTALLATION DIRECTORY: #{Regexp.escape @gemhome}|,
                  @ui.output
-    assert_match %r|RUBYGEMS PREFIX: |, @ui.output
+    assert_match(%r|RUBYGEMS PREFIX: |, @ui.output) unless __dir__.start_with?(@@project_dir)
     assert_match %r|RUBY EXECUTABLE:.*#{RbConfig::CONFIG['ruby_install_name']}|,
                  @ui.output
     assert_match %r|SYSTEM CONFIGURATION DIRECTORY:|, @ui.output
diff --git a/test/rubygems/test_gem_commands_update_command.rb b/test/rubygems/test_gem_commands_update_command.rb
index fa444fa32f..2433637e6e 100644
--- a/test/rubygems/test_gem_commands_update_command.rb
+++ b/test/rubygems/test_gem_commands_update_command.rb
@@ -483,13 +483,15 @@ def test_update_rubygems_arguments
 
     arguments = @cmd.update_rubygems_arguments
 
-    assert_equal '--prefix',           arguments.shift
-    assert_equal Gem.prefix,           arguments.shift
-    assert_equal '--no-rdoc',          arguments.shift
-    assert_equal '--no-ri',            arguments.shift
-    assert_equal '--previous-version', arguments.shift
-    assert_equal Gem::VERSION,         arguments.shift
-    assert_empty arguments
+    if Gem.prefix
+      assert arguments.include?('--prefix')
+      assert arguments.include?(Gem.prefix)
+    end
+    assert arguments.include?('--no-rdoc')
+    assert arguments.include?('--no-ri')
+    assert arguments.include?('--previous-version')
+    assert arguments.include?(Gem::VERSION)
+    assert_equal(Gem.prefix ? 6 : 4, arguments.length)
   end
 
   def test_update_rubygems_arguments_1_8_x
@@ -497,11 +499,13 @@ def test_update_rubygems_arguments_1_8_x
 
     arguments = @cmd.update_rubygems_arguments
 
-    assert_equal '--prefix',           arguments.shift
-    assert_equal Gem.prefix,           arguments.shift
-    assert_equal '--no-rdoc',          arguments.shift
-    assert_equal '--no-ri',            arguments.shift
-    assert_empty arguments
+    if Gem.prefix
+      assert arguments.include?('--prefix')
+      assert arguments.include?(Gem.prefix)
+    end
+    assert arguments.include?('--no-rdoc')
+    assert arguments.include?('--no-ri')
+    assert_equal(Gem.prefix ? 4 : 2, arguments.length)
   end
 
 end
diff --git a/test/rubygems/test_gem_gemcutter_utilities.rb b/test/rubygems/test_gem_gemcutter_utilities.rb
index c3f9a7ea18..eaf1261d23 100644
--- a/test/rubygems/test_gem_gemcutter_utilities.rb
+++ b/test/rubygems/test_gem_gemcutter_utilities.rb
@@ -11,6 +11,9 @@ def setup
 
     ENV['RUBYGEMS_HOST'] = nil
     Gem.configuration.rubygems_api_key = nil
+    # two below statements cleanup up intermittent failures/errors when run parallel
+    Gem.configuration.disable_default_gem_server = nil
+    Gem.host = nil
 
     @cmd = Gem::Command.new '', 'summary'
     @cmd.extend Gem::GemcutterUtilities
@@ -177,7 +180,8 @@ def test_sign_in_with_other_credentials_doesnt_overwrite_other_keys
   end
 
   def test_sign_in_with_bad_credentials
-    skip 'Always uses $stdin on windows' if Gem.win_platform?
+    skip 'Always uses $stdin on windows' if
+      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
 
     assert_raises Gem::MockGemUi::TermError do
       util_sign_in ['Access Denied.', 403, 'Forbidden']
@@ -188,7 +192,8 @@ def test_sign_in_with_bad_credentials
   end
 
   def util_sign_in response, host = nil, args = []
-    skip 'Always uses $stdin on windows' if Gem.win_platform?
+    skip 'Always uses $stdin on windows' if
+      Gem.win_platform? && RUBY_VERSION <= '1.9.2'
 
     email    = 'you@example.com'
     password = 'secret'
diff --git a/test/rubygems/test_gem_local_remote_options.rb b/test/rubygems/test_gem_local_remote_options.rb
index 272623be..df33737f 100644
--- a/test/rubygems/test_gem_local_remote_options.rb
+++ b/test/rubygems/test_gem_local_remote_options.rb
@@ -37,15 +37,16 @@ class TestGemLocalRemoteOptions < Gem::TestCase
     s = URI.parse "http://only-gems.example.com/"
 
     @cmd.handle_options %W[--clear-sources --source #{s}]
-    assert_equal [s.to_s], Gem.sources
+    assert_equal [s.to_s], Gem.sources.to_a
   end
 
   def test_clear_sources_option_idiot_proof
     spec_fetcher
 
     @cmd.add_local_remote_options
+    Gem.configuration.sources = nil
     @cmd.handle_options %W[--clear-sources]
-    assert_equal Gem.default_sources, Gem.sources
+    assert_equal Gem.default_sources, Gem.sources.to_a
   end
 
   def test_local_eh
@@ -88,7 +89,7 @@ class TestGemLocalRemoteOptions < Gem::TestCase
     original_sources << s2.to_s
     original_sources << "#{s3}/"
 
-    assert_equal original_sources, Gem.sources
+    assert_equal original_sources, Gem.sources.to_a
   end
 
   def test_short_source_option
@@ -101,7 +102,7 @@ class TestGemLocalRemoteOptions < Gem::TestCase
 
     original_sources << source
 
-    assert_equal original_sources, Gem.sources
+    assert_equal original_sources, Gem.sources.to_a
   end
 
   def test_update_sources_option
@@ -127,7 +128,7 @@ class TestGemLocalRemoteOptions < Gem::TestCase
       @cmd.handle_options %W[--source #{s1}]
     end
 
-    assert_equal [@gem_repo], Gem.sources
+    assert_equal [@gem_repo], Gem.sources.to_a
   end
 
 end
