diff --git a/test/mkmf/base.rb b/test/mkmf/base.rb
index 4f67478a56..1ada89c985 100644
--- a/test/mkmf/base.rb
+++ b/test/mkmf/base.rb
@@ -1,12 +1,26 @@
 # frozen_string_literal: false
-$extmk = true
 require 'rbconfig'
-RbConfig.fire_update!("top_srcdir", File.expand_path("../..", __dir__))
-File.foreach(RbConfig::CONFIG["topdir"]+"/Makefile") do |line|
-  if /^CC_WRAPPER\s*=\s*/ =~ line
-    RbConfig.fire_update!('CC_WRAPPER', $'.strip)
-    break
+
+# when running tests parallel, may see "You have to install development tools first."
+if RUBY_PLATFORM.include? 'mingw'
+  begin
+    require 'devkit'
+  rescue LoadError
+  end
+end
+
+# below is test for whether running from make or not
+if RbConfig::TOPDIR == File.dirname(RbConfig.method(:fire_update!).source_location[0])
+  $extmk = true
+  RbConfig.fire_update!("top_srcdir", File.expand_path("../..", __dir__))
+  File.foreach(RbConfig::CONFIG["topdir"]+"/Makefile") do |line|
+    if /^CC_WRAPPER\s*=\s*/ =~ line
+      RbConfig.fire_update!('CC_WRAPPER', $'.strip)
+      break
+    end
   end
+else
+  $extmk = false
 end
 
 require 'test/unit'
diff --git a/test/mkmf/test_have_library.rb b/test/mkmf/test_have_library.rb
index bb9ce6972d..fd5990924f 100644
--- a/test/mkmf/test_have_library.rb
+++ b/test/mkmf/test_have_library.rb
@@ -5,17 +5,17 @@
 class TestMkmf
   class TestHaveLibrary < TestMkmf
     LIBRARY_NAME = 'mkmftest'
-    HEADER_NAME = "#{LIBRARY_NAME}.h"
     FUNC_NAME = 'ruby_mkmftest_foo'
     ARPREFIX = config_string('LIBRUBY_A') {|lib| lib[/\A\w+/]}
 
     def create_library(libname = LIBRARY_NAME)
+      libname = "#{libname}_#{sprintf '%03d', rand(1000)}"
       lib = "#{ARPREFIX}#{libname}.#{$LIBEXT}"
-      open(HEADER_NAME, "w") do |hdr|
+      open("#{libname}.h", "w") do |hdr|
         hdr.puts "void #{FUNC_NAME}(void);"
         hdr.puts "void #{FUNC_NAME}_fake(void);"
       end
-      create_tmpsrc("#include \"#{HEADER_NAME}\"\n""void #{FUNC_NAME}(void) {}")
+      create_tmpsrc("#include \"#{libname}.h\"\n""void #{FUNC_NAME}(void) {}")
       assert(xsystem(cc_command), "compile failed: #{cc_command}")
       command = "#{CONFIG['AR']} #{config_string('ARFLAGS') || 'cru '}#{lib} #{CONFTEST}.#{$OBJEXT}"
       assert(xsystem(command), "making library failed: #{command}")
@@ -24,24 +24,24 @@ def create_library(libname = LIBRARY_NAME)
         command = "#{ranlib} #{lib}"
         assert(xsystem(command), "ranlib failed: #{command}")
       end
+      libname
     end
 
-    def assert_have_library(*args)
-      assert_equal(true, have_library(LIBRARY_NAME, *args), MKMFLOG)
+    def assert_have_library(*args, libname: LIBRARY_NAME)
+      assert_equal(true, have_library(libname, *args), MKMFLOG)
     end
 
-    def assert_not_have_library(*args)
-      assert_equal(false, have_library(LIBRARY_NAME, *args), MKMFLOG)
+    def assert_not_have_library(*args, libname: LIBRARY_NAME)
+      assert_equal(false, have_library(libname, *args), MKMFLOG)
     end
 
     def test_have_library
-      create_library
-      assert_have_library
+      assert_have_library(libname: create_library)
     end
 
     def test_have_library_with_name
-      create_library
-      assert_have_library(FUNC_NAME, HEADER_NAME)
+      libname = create_library
+      assert_have_library(FUNC_NAME, "#{libname}.h", libname: libname)
     end
 
     def test_not_have_library
@@ -49,8 +49,8 @@ def test_not_have_library
     end
 
     def test_not_have_library_with_name
-      create_library
-      assert_not_have_library("#{FUNC_NAME}_fake", HEADER_NAME)
+      libname = create_library
+      assert_not_have_library("#{FUNC_NAME}_fake", "#{libname}.h", libname: libname)
     end
   end
 end
