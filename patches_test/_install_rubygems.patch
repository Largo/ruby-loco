Patch by MSP-Greg
Allows running Core RubyGems tests from installed Ruby
diff --git a/test/rubygems/test_gem.rb b/tediff --git a/test/rubygems/test_gem.rb b/test/rubygems/test_gem.rb
index 8b028d3495..9f7d76c798 100644
--- a/test/rubygems/test_gem.rb
+++ b/test/rubygems/test_gem.rb
@@ -1030,7 +1030,7 @@ def test_self_platforms
   end
 
   def test_self_prefix
-    assert_equal PROJECT_DIR, Gem.prefix
+    assert_nil Gem.prefix
   end
 
   def test_self_prefix_libdir
diff --git a/test/rubygems/test_gem_commands_environment_command.rb b/test/rubygems/test_gem_commands_environment_command.rb
index a3edeb69bd..7f04924e6e 100644
--- a/test/rubygems/test_gem_commands_environment_command.rb
+++ b/test/rubygems/test_gem_commands_environment_command.rb
@@ -25,7 +25,11 @@ def test_execute
     assert_match %r{RUBY VERSION: \d+\.\d+\.\d+ \(.*\) \[.*\]}, @ui.output
     assert_match %r{INSTALLATION DIRECTORY: #{Regexp.escape @gemhome}},
                  @ui.output
-    assert_match %r{RUBYGEMS PREFIX: }, @ui.output
+    if Gem.prefix.nil?
+      refute_match %r{RUBYGEMS PREFIX: }, @ui.output
+    else
+      assert_match %r{RUBYGEMS PREFIX: }, @ui.output
+    end
     assert_match %r{RUBY EXECUTABLE:.*#{RbConfig::CONFIG['ruby_install_name']}},
                  @ui.output
     assert_match %r{GIT EXECUTABLE: #{@cmd.send(:git_path)}}, @ui.output
diff --git a/test/rubygems/test_gem_commands_update_command.rb b/test/rubygems/test_gem_commands_update_command.rb
index 9b590f0022..0a02663f7f 100644
--- a/test/rubygems/test_gem_commands_update_command.rb
+++ b/test/rubygems/test_gem_commands_update_command.rb
@@ -639,8 +639,11 @@ def test_update_rubygems_arguments
 
     arguments = @cmd.update_rubygems_arguments
 
-    assert_equal '--prefix',           arguments.shift
-    assert_equal Gem.prefix,           arguments.shift
+    # asserts fail from install folder
+    if Gem.method(:host).source_location[0].start_with? "#{File.expand_path '../../..', __FILE__}/"
+      assert_equal '--prefix',           arguments.shift
+      assert_equal Gem.prefix,           arguments.shift
+    end
     assert_equal '--no-document',      arguments.shift
     assert_equal '--previous-version', arguments.shift
     assert_equal Gem::VERSION,         arguments.shift
